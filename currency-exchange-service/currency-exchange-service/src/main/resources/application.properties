spring.application.name=currency-exchange-service
server.port=8000
spring.config.import=optional:configserver:http://localhost:8888
#to get all the low level sql query
spring.jpa.show-sql=true 
spring.datasource.url=jdbc:h2:mem:testdb
#want to see whta are all the details present in the db
spring.h2.console.enabled=true
#by default the load of data.sql is done before the tables are created so, we need this configuration.
spring.jpa.defer-datasource-initialization=true
#Configure the naming server url here
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true
#how many attempts we want to make
resilience4j.retry.instances.sample-api.max-attempts=5
#we will wait for how many sec for making the api call again incase of failure 
resilience4j.retry.instances.sample-api.wait-duration=5s
#we can also perform exponential backoff (on every failure, the time to make the api call again will increase subsequently
resilience4j.retry.instances.sample-api.enable-exponential-backoff=true

resilience4j.ratelimiter.instances.default.limit-for-period=2
resilience4j.ratelimiter.instances.default.limit-refresh-period=10s

resilience4j.bulkhead.instances.default.max-concurrent-calls=10


